// <auto-generated />
using System;
using AspNetCoreAngularCrudDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace test.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    [Migration("20211020055730_phase1")]
    partial class phase1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Team1")
                        .HasColumnType("integer");

                    b.Property<int?>("Team1Goals")
                        .HasColumnType("integer");

                    b.Property<int?>("Team2")
                        .HasColumnType("integer");

                    b.Property<int?>("Team2Goals")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Team1");

                    b.HasIndex("Team2");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Appearances")
                        .HasColumnType("integer");

                    b.Property<int?>("Goals")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShirtNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Match", b =>
                {
                    b.HasOne("AspNetCoreAngularCrudDemo.Models.Team", "Team1Navigation")
                        .WithMany("MatchTeam1Navigations")
                        .HasForeignKey("Team1")
                        .HasConstraintName("FK_Matches_Team1_Teams_Id");

                    b.HasOne("AspNetCoreAngularCrudDemo.Models.Team", "Team2Navigation")
                        .WithMany("MatchTeam2Navigations")
                        .HasForeignKey("Team2")
                        .HasConstraintName("FK_Matches_Team2_Teams_Id");

                    b.Navigation("Team1Navigation");

                    b.Navigation("Team2Navigation");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Player", b =>
                {
                    b.HasOne("AspNetCoreAngularCrudDemo.Models.Position", "Position")
                        .WithMany("Players")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Players_Positions");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Position", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("AspNetCoreAngularCrudDemo.Models.Team", b =>
                {
                    b.Navigation("MatchTeam1Navigations");

                    b.Navigation("MatchTeam2Navigations");
                });
#pragma warning restore 612, 618
        }
    }
}
